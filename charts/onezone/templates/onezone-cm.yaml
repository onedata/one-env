{{- $nodes := .Values.nodes }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "fullname" $ }}-config
  labels:
    app: {{ template "fullname" $ }}
    chart: {{ $.Chart.Name }}
    release: {{ $.Release.Name  }}
    heritage: {{ $.Release.Service }}
  annotations:
    version: "{{ $.Chart.Version }}"
data:
  panel-overlay.config: {{ toYaml .Values.panelOverlayConfig }}
  worker-overlay.config: {{ toYaml .Values.panelOverlayConfig }}

  ONEPANEL_LOG_LEVEL: {{ default $.Values.log_level "info" | quote }}
  ONEPANEL_BATCH_MODE: {{ $.Values.onepanel_batch_mode_enabled | quote }}
  ONEPANEL_GENERATE_TEST_WEB_CERT: {{ default .Values.onepanel_generate_test_web_cert "true" | quote  }}
  ONEPANEL_TRUST_TEST_CA: {{ default .Values.onepanel_trust_test_ca "true" | quote }}
  {{ if $.Values.onepanel_generated_cert_domain }}
  ONEPANEL_GENERATED_CERT_DOMAIN: {{ $.Values.onepanel_generated_cert_domain | quote }}
  {{ else }}
  ONEPANEL_GENERATED_CERT_DOMAIN: "{{ template "service_url" $ }}"
  {{ end }}


  {{ if $.Values.batchConfig }}
  ONEZONE_CONFIG: |
      cluster:
        autoDeploy: {{ default $.Values.batchConfig.autoDeploy true }}

        # TODO: Find way to hold this with default
        {{ if $.Values.batchConfig.domainName }}
        domainName: {{ $.Values.batchConfig.domainName }}
        {{ else }}
        domainName: "{{ template "service_url" $ }}"
        {{ end }}

        # This part is covered by nodes configuration
        nodes:
          {{- range $nodeName := (keys $nodes) }}
          {{ $nodeName }}:
            hostname: {{ template "fullname" $ }}-{{ $nodeName }}-0
          {{- end }}
        managers:
          mainNode: {{ $.Values.clusterConfig.mainNode }}
          nodes:
      {{- with $.Values.clusterConfig.managers }}
          {{- range $node := . }}
            - {{ $node }}
          {{- end }}
      {{- else }}
          {{- range $nodeName := (keys $nodes) }}
            - {{ $nodeName }}
          {{- end }}
      {{- end }}
        workers:
          nodes:
      {{- with $.Values.clusterConfig.workers }}
          {{- range $node := . }}
            - {{ $node }}
          {{- end }}
      {{- else }}
          {{- range $nodeName := (keys $nodes) }}
            - {{ $nodeName }}
          {{- end }}
      {{- end }}
        databases:
          nodes:
      {{- with $.Values.clusterConfig.databases }}
          {{- range $node := . }}
            - {{ $node }}
          {{- end }}
      {{- else }}
          {{- range $nodeName :=  (keys $nodes) }}
            - {{ $nodeName }}
          {{- end }}
      {{- end }}

      onezone:
        {{ if $.Values.batchConfig.name -}}
        name: {{ $.Values.batchConfig.name }}
        {{- else -}}
        name: {{ template "fullname" $ }}
        {{- end }}

        # TODO: Find way to hold this with default
        {{ if $.Values.batchConfig.domainName }}
        domainName: {{ $.Values.batchConfig.domainName }}
        {{ else }}
        domainName: {{ template "service_url" $ }}
        {{ end }}

        {{- if and $.Values.batchConfig.createUsers (or $.Values.batchConfig.onepanelAdminUsers $.Values.batchConfig.onepanelUsers) }}
      onepanel:
        users:
          {{- range $.Values.batchConfig.onepanelAdminUsers }}
          {{ .login }}:
            password: {{ .password }}
            userRole: admin
          {{- end }}
          {{- range $.Values.batchConfig.onepanelUsers }}
          {{ .login }}:
            password: {{ .password }}
            userRole: regular
          {{- end }}
        {{- end }}
  {{ end }}
{{ toYaml $.Values.onezoneEnv | indent 2 }}
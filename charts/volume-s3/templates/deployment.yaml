apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  labels:
    app: {{ template "fullname" . }}
    chart: {{ .Chart.Name }}
    release: {{ template "releaseName" .  }}
    heritage: {{ .Release.Service }}
  annotations:
    version: "{{ .Chart.Version }}"
spec:
  template:
    metadata:
      labels:
        app: {{ template "fullname" . }}
        chart: {{ .Chart.Name }}
        release: {{ template "releaseName" . }}
        heritage: {{ .Release.Service }}
      annotations:
        version: "{{ .Chart.Version }}"
    spec:
      hostname: {{ .Chart.Name | quote }}
      subdomain: {{ template "fullname" . }}
      hostNetwork: {{ template "hostNetwork" . }}
      {{- if .Values.affinity }}
      affinity:
{{ toYaml .Values.affinity | indent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
      {{- end }}
      {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
      {{- end }}
{{ include "imagePullSecrets" . | indent 6 }}
      containers:
      - name: {{ .Chart.Name }}
        image: {{ .Values.image }}
        imagePullPolicy: {{ template "imagePullPolicy" dict "root" . }}
        env:
          - name: SCALITY_ACCESS_KEY_ID
            value: {{ .Values.key_id }}
          - name: SCALITY_SECRET_ACCESS_KEY
            value: {{ .Values.access_key }}
          - name: LOG_LEVEL
            value: {{ .Values.scality_loglevel }}
          # TODO: by setting host_name like that, we will be able to communicate with
          # aws server just by using http://{{ template "fullname" . }}:8000 url
          # using FQDN in it's place will not work. FQDN would need to registered
          # as an endpoint separately
          - name: HOST_NAME
            value: {{ template "fullname" . }}
        command:
         - "sh"
         - "-c"
         - >
           /usr/src/app/docker-entrypoint.sh npm start ;
        ports:
          - containerPort: {{ .Values.scality_port }}
        readinessProbe:
          exec:
            command:
              - "bash"
              - "-c"
              - >
                set -e;
                echo "" > /dev/tcp/127.0.0.1/8000;
                echo "" > /dev/tcp/127.0.0.1/9990;
                echo "" > /dev/tcp/127.0.0.1/9991;
        livenessProbe:
          tcpSocket:
            port: {{ .Values.scality_port }}
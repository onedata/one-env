# Default values for keycloak
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

wait_for:
  image: onedata/k8s-wait-for:v1.1
  imagePullPolicy: IfNotPresent

# The configuration of a realm and an open-id client that is created
# by an initialization job.
# a initialization job. The format of this list must leave place
# for other possible idps. Hence the list and an enable flag
# of idps that can create a suer.
init:
  # Disable initialization job
  enable: true
  # Keycloak admin credentials
  adminUsername: admin
  adminPassword: password
  # Realm and open-id client
  realmId: onedata
  clientName: onedata
  # Should a client secret be published in a config map
  # to be consumed by other services.
  publishClientSecret: true

# The list of keycloak users that will be created by 
# a initialization job. The format of this list must leave place
# for other possible idps. Hence the list and an enable flag
# of idps that can create a suer.
users:
  - &user_test
    name: test
    firstName: Test
    lastName: Smith
    idps:
      keycloak:
        enabled: true
    password: password
    email: test@example.com

# The list of keycloak groups that will be created by
# an initialization job. The format of this list must leave place
# for other possible IDPs. Hence the list and an enable flag
# of idps that can create a group. In keycloak the groups have a tree
# structure. In authors opinion, the yaml notation of
# long trees would be quite troublesome to create and maintain.
# The yaml reference feature is used to create a tree while group
# definitions are defined as a yaml list. The group creation mechanism
# iterates through the list and traverses each group and it's children,
# creating all the groups in the hierarchy. In order to mark which groups 
# are already a part of a tree hierarchy and should not be created again when
# a list iteration reaches them, the child flag is introduced.
groups:
  - &group_alpha
    name: alpha
    idps:
      keycloak:
        children: [ *group_beta ]
        enabled: true
  - &group_beta
    name: beta
    idps:
      keycloak:
        child: true
        users: [ *user_test ]
        enabled: true

# Ovverride the default values of a parent keycloak
# chart to make. So it playes nicely with Onedata charts.
keycloak:
  keycloak:
    image:
      tag: 4.0.0.Beta2
    username: admin
    password: password
    persistence:
      deployPostgres: false
  service:
    type: ClusterIP
    port: 80
  persistence:
    deployPostgres: false
  serviceAccount:
    create: false
  rbac:
    create: false